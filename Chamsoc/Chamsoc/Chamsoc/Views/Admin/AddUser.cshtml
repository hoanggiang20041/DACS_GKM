@{
    ViewData["Title"] = "Thêm người dùng";
}

<div class="container my-5">
    <h2 class="text-center mb-4">Thêm người dùng</h2>
    <div class="row justify-content-center">
        <div class="col-md-6">
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger" role="alert">
                    @TempData["ErrorMessage"]
                </div>
            }
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success" role="alert">
                    @TempData["SuccessMessage"]
                </div>
            }
            <form asp-action="AddUser" method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
                <div class="mb-3">
                    <label for="username" class="form-label">Tên đăng nhập</label>
                    <input type="text" class="form-control" id="username" name="username" autocomplete="username" required />
                    <div class="invalid-feedback">
                        Vui lòng nhập tên đăng nhập.
                    </div>
                </div>
                <div class="mb-3">
                    <label for="email" class="form-label">Email</label>
                    <input type="email" class="form-control" id="email" name="email" autocomplete="email" required />
                    <div class="invalid-feedback">
                        Vui lòng nhập email hợp lệ.
                    </div>
                </div>
                <div class="mb-3">
                    <label for="phoneNumber" class="form-label">Số điện thoại</label>
                    <input type="text" class="form-control" id="phoneNumber" name="phoneNumber" autocomplete="tel" required maxlength="10" pattern="\d{10}" />
                    <div class="invalid-feedback">
                        Vui lòng nhập số điện thoại gồm đúng 10 chữ số.
                    </div>
                </div>
                <div class="mb-3">
                    <label for="password" class="form-label">Mật khẩu</label>
                    <input type="password" class="form-control" id="password" name="password" autocomplete="new-password" required />
                    <div class="invalid-feedback">
                        Vui lòng nhập mật khẩu.
                    </div>
                </div>
                <div class="mb-3">
                    <label for="role" class="form-label">Vai trò</label>
                    <select class="form-control" id="role" name="role" required onchange="toggleRoleFields()">
                        <option value="">Chọn vai trò</option>
                        <option value="Senior">Người cần chăm sóc (Senior)</option>
                        <option value="Caregiver">Người chăm sóc (Caregiver)</option>
                    </select>
                    <div class="invalid-feedback">
                        Vui lòng chọn vai trò.
                    </div>
                </div>
                <div id="commonFields">
                    <div class="mb-3">
                        <label for="name" class="form-label">Họ và tên</label>
                        <input type="text" class="form-control" id="name" name="name" autocomplete="name" required />
                        <div class="invalid-feedback">
                            Vui lòng nhập họ và tên.
                        </div>
                    </div>
                    <div class="mb-3" id="ageField" style="display: none;">
                        <label for="age" class="form-label">Tuổi</label>
                        <input type="number" class="form-control" id="age" name="age" min="1" />
                        <div class="invalid-feedback">
                            Vui lòng nhập tuổi hợp lệ (lớn hơn 0).
                        </div>
                    </div>
                    <div class="mb-3" id="careNeedsField" style="display: none;">
                        <label for="careNeeds" class="form-label">Tình trạng bệnh</label>
                        <input type="text" class="form-control" id="careNeeds" name="careNeeds" autocomplete="off" />
                        <div class="invalid-feedback">
                            Vui lòng nhập tình trạng bệnh.
                        </div>
                    </div>
                    <div class="mb-3" id="skillsField" style="display: none;">
                        <label for="skills" class="form-label">Kỹ năng chăm sóc</label>
                        <select class="form-control" id="skills" name="skills">
                            <option value="">Chọn kỹ năng</option>
                            <option value="Khám toàn diện">Khám toàn diện</option>
                            <option value="Khám vật lý trị liệu">Khám vật lý trị liệu</option>
                        </select>
                        <div class="invalid-feedback">
                            Vui lòng chọn kỹ năng chăm sóc.
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="priceDisplay" class="form-label">Chi phí bạn có thể chi trả/Thù lao bạn mong muốn (VNĐ)</label>
                        <input type="text" class="form-control" id="priceDisplay" placeholder="Nhập giá (ví dụ: 1.000.000)" required />
                        <input type="hidden" id="priceHidden" name="price" />
                        <div class="invalid-feedback">
                            Vui lòng nhập chi phí/thù lao (lớn hơn 500.000 VND).
                        </div>
                    </div>
                    <div class="mb-3" id="statusField" style="display: none;">
                        <label for="status" class="form-label">Trạng thái</label>
                        <select class="form-control" id="status" name="status">
                            <option value="true">Hoạt động</option>
                            <option value="false">Không hoạt động</option>
                        </select>
                    </div>
                    <div class="mb-3" id="isAvailableField" style="display: none;">
                        <label for="isAvailable" class="form-label">Trạng thái</label>
                        <select class="form-control" id="isAvailable" name="isAvailable">
                            <option value="true">Sẵn sàng</option>
                            <option value="false">Đang bận</option>
                        </select>
                    </div>
                    <div class="mb-3" id="identityAndHealthDocsField" style="display: none;">
                        <label for="identityAndHealthDocs" class="form-label">Giấy tờ tùy thân và giấy khám sức khỏe</label>
                        <input type="file" class="form-control" id="identityAndHealthDocs" name="identityAndHealthDocs" accept=".pdf,.jpg,.jpeg,.png" multiple />
                        <small class="form-text text-muted" id="identityAndHealthDocsMessage">Tải lên nhiều file PDF, JPG, JPEG, hoặc PNG.</small>
                        <div class="invalid-feedback" id="identityAndHealthDocsFeedback">
                            Chỉ chấp nhận file PDF, JPG, JPEG, hoặc PNG.
                        </div>
                    </div>
                    <div class="mb-3" id="certificateField" style="display: none;">
                        <label for="certificate" class="form-label">Chứng chỉ (nếu có)</label>
                        <input type="file" class="form-control" id="certificate" name="certificate" accept=".pdf,.jpg,.jpeg,.png" />
                    </div>
                </div>
                <div class="text-center">
                    <button type="submit" class="btn btn-primary">Thêm người dùng</button>
                    <a asp-action="ManageUsers" class="btn btn-secondary">Hủy</a>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    // Danh sách các loại bệnh cho gợi ý
    const diseases = ["Tiểu đường", "Cao huyết áp", "Tim mạch", "Hô hấp", "Thần kinh"];

    // Hàm toggle các trường dựa trên vai trò
    function toggleRoleFields() {
        const role = document.getElementById("role").value;
        const ageField = document.getElementById("ageField");
        const careNeedsField = document.getElementById("careNeedsField");
        const skillsField = document.getElementById("skillsField");
        const statusField = document.getElementById("statusField");
        const isAvailableField = document.getElementById("isAvailableField");
        const identityAndHealthDocsField = document.getElementById("identityAndHealthDocsField");
        const certificateField = document.getElementById("certificateField");

        ageField.style.display = "none";
        careNeedsField.style.display = "none";
        skillsField.style.display = "none";
        statusField.style.display = "none";
        isAvailableField.style.display = "none";
        identityAndHealthDocsField.style.display = "none";
        certificateField.style.display = "none";

        const inputs = document.querySelectorAll('#commonFields input, #commonFields textarea, #commonFields select');
        inputs.forEach(input => input.removeAttribute("required"));

        if (role === "Senior") {
            ageField.style.display = "block";
            careNeedsField.style.display = "block";
            statusField.style.display = "block";
            identityAndHealthDocsField.style.display = "block";

            document.getElementById("name").setAttribute("required", "required");
            document.getElementById("age").setAttribute("required", "required");
            document.getElementById("careNeeds").setAttribute("required", "required");
            document.getElementById("priceDisplay").setAttribute("required", "required");
        } else if (role === "Caregiver") {
            skillsField.style.display = "block";
            isAvailableField.style.display = "block";
            certificateField.style.display = "block";

            document.getElementById("name").setAttribute("required", "required");
            document.getElementById("skills").setAttribute("required", "required");
            document.getElementById("priceDisplay").setAttribute("required", "required");
        }
    }

    // Định dạng giá
    const priceDisplay = document.getElementById('priceDisplay');
    if (priceDisplay) {
        priceDisplay.addEventListener('input', function (e) {
            let value = e.target.value.replace(/[^0-9]/g, '');
            if (value) {
                e.target.value = parseInt(value).toLocaleString('vi-VN');
                document.getElementById('priceHidden').value = value;
            } else {
                e.target.value = '';
                document.getElementById('priceHidden').value = '0';
            }
        });
    }

    // Autocomplete cho trường CareNeeds
    const careNeedsInput = document.getElementById('careNeeds');
    if (careNeedsInput) {
        careNeedsInput.addEventListener('input', function (e) {
            const value = e.target.value.toLowerCase();
            const suggestions = diseases.filter(disease => disease.toLowerCase().includes(value));

            const existingSuggestions = document.getElementById('careNeedsSuggestions');
            if (existingSuggestions) {
                existingSuggestions.remove();
            }

            if (suggestions.length > 0) {
                const suggestionsDiv = document.createElement('div');
                suggestionsDiv.id = 'careNeedsSuggestions';
                suggestionsDiv.style.position = 'absolute';
                suggestionsDiv.style.zIndex = '1000';
                suggestionsDiv.style.backgroundColor = '#fff';
                suggestionsDiv.style.border = '1px solid #ccc';
                suggestionsDiv.style.width = careNeedsInput.offsetWidth + 'px';

                suggestions.forEach(suggestion => {
                    const suggestionItem = document.createElement('div');
                    suggestionItem.textContent = suggestion;
                    suggestionItem.style.padding = '5px';
                    suggestionItem.style.cursor = 'pointer';
                    suggestionItem.addEventListener('click', function () {
                        careNeedsInput.value = suggestion;
                        suggestionsDiv.remove();
                    });
                    suggestionsDiv.appendChild(suggestionItem);
                });

                careNeedsInput.parentElement.appendChild(suggestionsDiv);
            }
        });

        document.addEventListener('click', function (e) {
            if (e.target !== careNeedsInput) {
                const suggestionsDiv = document.getElementById('careNeedsSuggestions');
                if (suggestionsDiv) {
                    suggestionsDiv.remove();
                }
            }
        });
    }

    // Validation định dạng file cho identityAndHealthDocs
    document.getElementById('identityAndHealthDocs')?.addEventListener('change', function (e) {
        const files = e.target.files;
        if (files.length > 0) {
            const validTypes = ['application/pdf', 'image/jpeg', 'image/png'];
            for (let file of files) {
                if (!validTypes.includes(file.type)) {
                    e.target.classList.add('is-invalid');
                    document.getElementById('identityAndHealthDocsFeedback').textContent = 'Chỉ chấp nhận file PDF, JPG, JPEG, hoặc PNG.';
                    document.getElementById('identityAndHealthDocsMessage').style.display = 'none';
                    return;
                }
            }
            e.target.classList.remove('is-invalid');
            document.getElementById('identityAndHealthDocsFeedback').textContent = 'Chỉ chấp nhận file PDF, JPG, JPEG, hoặc PNG.';
            document.getElementById('identityAndHealthDocsMessage').style.display = 'block';
        }
    });

    // Validation trước khi gửi form
    document.addEventListener('DOMContentLoaded', function () {
        const form = document.querySelector('form');
        const phoneInput = document.getElementById('phoneNumber');

        // Kiểm tra real-time khi nhập số điện thoại
        phoneInput.addEventListener('input', function (e) {
            let value = e.target.value.replace(/[^0-9]/g, ''); // Chỉ giữ lại số
            e.target.value = value; // Cập nhật giá trị ngay lập tức
            if (value.length > 10) {
                e.target.value = value.slice(0, 10); // Cắt bớt nếu vượt quá 10 số
            }
            if (value.length !== 10) {
                e.target.classList.add('is-invalid');
            } else {
                e.target.classList.remove('is-invalid');
            }
        });

        form.addEventListener('submit', function (e) {
            let role = document.getElementById('role').value;
            let price = document.getElementById('priceHidden').value;
            let name = document.getElementById('name').value;
            let phoneNumber = document.getElementById('phoneNumber').value;
            let errors = [];

            // Reset validation state
            form.querySelectorAll('.is-invalid').forEach(element => element.classList.remove('is-invalid'));

            // Debug giá trị của các trường
            console.log("Role:", role);
            console.log("Username:", document.getElementById('username').value);
            console.log("Email:", document.getElementById('email').value);
            console.log("PhoneNumber:", phoneNumber);
            console.log("Password:", document.getElementById('password').value);
            console.log("Name:", name);
            console.log("Price:", price);

            // Kiểm tra số điện thoại phải là 10 chữ số
            const phoneRegex = /^\d{10}$/;
            if (!phoneNumber || !phoneRegex.test(phoneNumber)) {
                errors.push(`Số điện thoại phải gồm đúng 10 chữ số. Giá trị hiện tại: "${phoneNumber}"`);
                document.getElementById('phoneNumber').classList.add('is-invalid');
            }

            if (role === "Senior") {
                console.log("Age:", document.getElementById('age').value);
                console.log("CareNeeds:", document.getElementById('careNeeds').value);

                if (!name || name.trim() === '') {
                    errors.push(`Họ và tên không hợp lệ. Giá trị hiện tại: "${name}"`);
                    document.getElementById('name').classList.add('is-invalid');
                }
                if (!document.getElementById('age').value || parseInt(document.getElementById('age').value) <= 0) {
                    errors.push(`Tuổi không hợp lệ. Giá trị hiện tại: "${document.getElementById('age').value}"`);
                    document.getElementById('age').classList.add('is-invalid');
                }
                if (!document.getElementById('careNeeds').value) {
                    errors.push(`Tình trạng bệnh không hợp lệ. Giá trị hiện tại: "${document.getElementById('careNeeds').value}"`);
                    document.getElementById('careNeeds').classList.add('is-invalid');
                }
            } else if (role === "Caregiver") {
                console.log("Skills:", document.getElementById('skills').value);

                if (!name || name.trim() === '') {
                    errors.push(`Họ và tên không hợp lệ. Giá trị hiện tại: "${name}"`);
                    document.getElementById('name').classList.add('is-invalid');
                }
                if (!document.getElementById('skills').value) {
                    errors.push(`Kỹ năng chăm sóc không hợp lệ. Giá trị hiện tại: "${document.getElementById('skills').value}"`);
                    document.getElementById('skills').classList.add('is-invalid');
                }
            } else {
                errors.push("Vui lòng chọn vai trò.");
                document.getElementById('role').classList.add('is-invalid');
            }

            if (!price || parseInt(price) <= 500000) {
                errors.push(`Chi phí/Thù lao phải lớn hơn 500.000. Giá trị hiện tại: "${price}"`);
                document.getElementById('priceDisplay').classList.add('is-invalid');
            }

            if (errors.length > 0) {
                e.preventDefault();
                console.log("Validation Errors:", errors);
                alert("Có lỗi xảy ra:\n" + errors.join("\n"));
            }
        });
    });
</script>