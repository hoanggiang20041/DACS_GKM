@model List<Chamsoc.Models.Notification>

@{
    ViewData["Title"] = "Thông báo";
}

<style>
    body {
        background: #f6f8fa;
    }
    .notification-list {
        max-width: 600px;
        margin: 40px auto;
        background: #fff;
        border-radius: 18px;
        box-shadow: 0 6px 32px rgba(0,0,0,0.08);
        padding: 0;
        overflow: hidden;
    }
    .notification-item {
        display: flex;
        align-items: flex-start;
        gap: 16px;
        padding: 20px 28px 18px 28px;
        border-bottom: 1px solid #f0f0f0;
        background: #fff;
        transition: background 0.18s;
        cursor: pointer;
        position: relative;
    }
    .notification-item.unread {
        background: #f3faff;
        border-left: 4px solid #2196f3;
    }
    .notification-item.read {
        opacity: 0.7;
    }
    .notification-item:hover {
        background: #f7fafd;
    }
    .notification-icon {
        flex-shrink: 0;
        width: 38px;
        height: 38px;
        border-radius: 50%;
        background: #e3f2fd;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #2196f3;
        font-size: 1.3rem;
        margin-top: 2px;
        box-shadow: 0 2px 8px rgba(33,150,243,0.08);
    }
    .notification-content {
        flex: 1;
    }
    .notification-message {
        font-size: 1.08rem;
        color: #222;
        font-weight: 500;
        margin-bottom: 4px;
        word-break: break-word;
    }
    .notification-time {
        font-size: 0.95rem;
        color: #888;
    }
    .notification-actions {
        margin-left: 12px;
        display: flex;
        flex-direction: column;
        gap: 8px;
    }
    .btn-mark-read {
        background: #e0e0e0;
        color: #333;
        border: none;
        border-radius: 6px;
        padding: 4px 14px;
        font-size: 0.95rem;
        font-weight: 500;
        transition: background 0.2s;
        margin-bottom: 2px;
    }
    .btn-mark-read:hover {
        background: #2196f3;
        color: #fff;
    }
    .badge-unread {
        position: absolute;
        top: 18px;
        right: 18px;
        background: #ff3b3b;
        color: #fff;
        font-size: 0.8rem;
        padding: 2px 10px;
        border-radius: 12px;
        font-weight: 600;
        letter-spacing: 0.5px;
        box-shadow: 0 2px 8px rgba(255,59,59,0.08);
    }
    .notification-item:last-child {
        border-bottom: none;
    }
    .notification-empty {
        text-align: center;
        color: #888;
        padding: 40px 0 30px 0;
        font-size: 1.1rem;
    }
</style>

<h2 class="text-center mb-4">Danh sách thông báo</h2>

@if (Model == null || Model.Count == 0)
{
    <div class="notification-list notification-empty">Không có thông báo nào.</div>
}
else
{
    <div class="notification-list">
        @foreach (var notification in Model)
        {
            var isUnread = !notification.IsRead;
            <div class="notification-item @(isUnread ? "unread" : "read")">
                <div class="notification-icon">
                    @if (notification.Type == "Call")
                    {
                        <i class="fa fa-phone"></i>
                    }
                    else if (notification.Type == "Complaint")
                    {
                        <i class="fa fa-exclamation-circle"></i>
                    }
                    else
                    {
                        <i class="fa fa-bell"></i>
                    }
                </div>
                <div class="notification-content">
                    <div class="notification-message">@notification.Message</div>
                    <div class="notification-time">@notification.CreatedAt.ToString("dd/MM/yyyy HH:mm")</div>
                </div>
                <div class="notification-actions">
                    @if (isUnread)
                    {
                        <form asp-action="MarkAsRead" asp-route-notificationId="@notification.Id" method="post" style="display:inline;">
                            <button type="submit" class="btn-mark-read">Đánh dấu đã đọc</button>
                        </form>
                    }
                    @if (notification.Type == "Call" && isUnread)
                    {
                        <a asp-action="CallBack" asp-route-notificationId="@notification.Id" class="btn btn-success btn-sm">Gọi lại</a>
                    }
                </div>
                @if (isUnread)
                {
                    <span class="badge-unread">Chưa đọc</span>
                }
            </div>
        }
    </div>
}