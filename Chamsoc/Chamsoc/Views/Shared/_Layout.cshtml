@inject Chamsoc.Data.AppDbContext DbContext

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.32/dist/sweetalert2.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />
    @await RenderSectionAsync("Styles", required: false)
    <style>
        /* Banner */
        .banner {
            position: relative;
            text-align: center;
            color: white;
            height: 400px;
            opacity: 0;
            animation: fadeIn 1.5s ease-in-out forwards;
            margin-bottom: 2rem;
        }

        .banner img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            display: block;
            filter: brightness(0.7);
        }

        .banner-text {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            text-align: center;
            width: 80%;
            opacity: 0;
            animation: slideIn 1s ease-in-out 0.5s forwards;
        }

        .banner-text h1 {
            font-size: 3rem;
            font-weight: bold;
            color: white;
            text-shadow: 3px 3px 6px rgba(0, 0, 0, 0.8);
            background: rgba(0, 0, 0, 0.5);
            padding: 10px 20px;
            border-radius: 8px;
            margin-bottom: 10px;
        }

        .banner-text p {
            font-size: 1.25rem;
            color: white;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);
            background: rgba(0, 0, 0, 0.5);
            padding: 5px 15px;
            border-radius: 5px;
        }

        @@keyframes fadeIn {
            0% {
                opacity: 0;
            }

            100% {
                opacity: 1;
            }
        }

        @@keyframes slideIn {
            0% {
                opacity: 0;
                transform: translate(-50%, -70%);
            }

            100% {
                opacity: 1;
                transform: translate(-50%, -50%);
            }
        }

        body {
            font-family: 'Arial', sans-serif;
        }

        .navbar {
            background-color: #ffffff;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            padding: 1rem 0;
        }

        .navbar-brand {
            font-size: 1.5rem;
            font-weight: bold;
            color: #007bff;
        }

        .nav-link {
            color: #333;
            font-weight: 500;
            padding: 0.5rem 1rem;
            transition: color 0.3s ease;
        }

            .nav-link:hover {
                color: #007bff;
            }

        .dropdown-menu {
            background-color: #ffffff;
            border: 1px solid #ddd;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .dropdown-item {
            color: #333;
            font-weight: 500;
            padding: 0.5rem 1rem;
            transition: all 0.3s ease;
        }

            .dropdown-item:hover {
                background-color: #007bff;
                color: white;
            }

        .hotline-bar {
            background-color: #ff6200;
            color: white;
            padding: 10px;
            position: fixed;
            bottom: 0;
            left: 0;
            width: 100%;
            z-index: 1000;
            text-align: center;
            box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);
        }

            .hotline-bar a {
                color: white;
                font-weight: bold;
                margin: 0 10px;
                text-decoration: none;
                transition: color 0.3s ease;
            }

            .hotline-bar a:hover {
                color: #f8f9fa;
            }

        /* Bong bóng chat Zalo */
        .zalo-chat-btn {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background-color: #0068ff; /* Màu Zalo */
            color: white;
            width: 60px;
            height: 60px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
            cursor: pointer;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

            .zalo-chat-btn:hover {
                transform: scale(1.1);
                box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
            }

            .zalo-chat-btn i {
                font-size: 24px;
            }

        .footer {
            background-color: #1a252f;
            color: white;
            padding: 40px 0;
            margin-bottom: 50px;
        }

            .footer h5 {
                color: #ff6200;
                font-weight: bold;
                margin-bottom: 1.5rem;
            }

            .footer a {
                color: #ff6200;
                text-decoration: none;
                transition: color 0.3s ease;
            }

                .footer a:hover {
                    color: #ff8533;
                    text-decoration: none;
                }

        .login-btn {
            background-color: #007bff;
            color: white;
            padding: 8px 20px;
            border-radius: 20px;
            text-decoration: none;
            font-weight: 500;
            transition: all 0.3s ease;
            border: none;
        }

            .login-btn:hover {
                background-color: #0056b3;
                color: white;
                transform: translateY(-2px);
                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
            }

        .notification-dropdown {
            max-height: 400px;
            overflow-y: auto;
            width: 350px;
        }

        .notification-item {
            padding: 10px;
            border-bottom: 1px solid #ddd;
        }

            .notification-item:last-child {
                border-bottom: none;
            }

        .notification-badge {
            position: absolute;
            top: 0;
            right: 0;
            background-color: #dc3545;
            color: white;
            border-radius: 50%;
            padding: 0.25rem 0.5rem;
            font-size: 0.75rem;
            transform: translate(50%, -50%);
        }

        /* Main Content */
        .container {
            padding-top: 2rem;
            padding-bottom: 2rem;
        }

        main {
            min-height: calc(100vh - 400px);
        }

        .toast {
            opacity: 1 !important;
        }
        .toast-success {
            background-color: #28a745 !important;
        }
        .toast-error {
            background-color: #dc3545 !important;
        }
        .toast-info {
            background-color: #17a2b8 !important;
        }
        .toast-warning {
            background-color: #ffc107 !important;
        }
    </style>
</head>
<body>
    <partial name="_PopupNotification" />
    <!-- Header -->
    <nav class="navbar navbar-expand-lg navbar-light">
        <div class="container">
            <a class="navbar-brand" href="/">GKM Care</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav me-auto">
                    <li class="nav-item">
                        <a class="nav-link" asp-controller="Home" asp-action="GioiThieuSoQua">Giới thiệu</a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="servicesDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            Dịch vụ
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="servicesDropdown">
                            <li><a class="dropdown-item" asp-controller="Home" asp-action="ChamSocSucKhoe">Chăm sóc sức khỏe toàn diện</a></li>
                            <li><a class="dropdown-item" asp-controller="Home" asp-action="ChamSocVatLyTriLieu">Chăm sóc vật lý trị liệu</a></li>
                        </ul>
                    </li>
                    @if (!User.Identity.IsAuthenticated)
                    {
                        <li class="nav-item">
                            <a class="nav-link" asp-controller="Account" asp-action="Register">Đăng ký chăm sóc</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" asp-controller="Account" asp-action="Register">Người cần chăm sóc</a>
                        </li>
                    }

                    @if (User.Identity.IsAuthenticated)
                    {
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" id="profileDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hồ sơ
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="profileDropdown">
                                <li><a class="dropdown-item" asp-controller="Account" asp-action="ViewUserProfile" asp-route-id="@User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value">Xem hồ sơ</a></li>
                                <li>
                                    @if (User.IsInRole("Senior"))
                                    {
                                        <a class="dropdown-item" asp-controller="Account" asp-action="UpdateProfileSenior" asp-route-id="@User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value">Cập nhật hồ sơ</a>
                                    }
                                    else if (User.IsInRole("Caregiver"))
                                    {
                                        <a class="dropdown-item" asp-controller="Account" asp-action="UpdateProfileCaregiver" asp-route-id="@User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value">Cập nhật hồ sơ</a>
                                    }
                                    else if (User.IsInRole("Admin"))
                                    {
                                        <a class="dropdown-item" asp-controller="Admin" asp-action="UpdateProfileAdmin" asp-route-id="@User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value">Cập nhật hồ sơ</a>
                                    }
                                </li>
                            </ul>
                        </li>
                    }

                    @if (User.Identity.IsAuthenticated)
                    {
                        @if (Context.Session != null && Context.Session.GetString("UserRole") == "Admin")
                        {
                            <!-- Admin Notifications -->
                            <li class="nav-item position-relative">
                                @{
                                    var adminUserId = Context.Session.GetString("UserId");
                                    var adminUnreadCount = 0;
                                    var adminNotifications = new List<Chamsoc.Models.Notification>();
                                    if (!string.IsNullOrEmpty(adminUserId) && DbContext != null)
                                    {
                                        try
                                        {
                                            adminUnreadCount = DbContext.Notifications
                                            .Where(n => n.UserId == adminUserId && !n.IsRead)
                                            .Count();
                                            if (adminUnreadCount > 0)
                                            {
                                                adminNotifications = DbContext.Notifications
                                                .Where(n => n.UserId == adminUserId && !n.IsRead)
                                                .OrderByDescending(n => n.CreatedAt)
                                                .ToList();
                                            }
                                        }
                                        catch (Exception ex)
                                        {
                                            <li class="nav-item">
                                                <a class="nav-link text-danger">Lỗi khi tải thông báo: @ex.Message</a>
                                            </li>
                                        }
                                    }
                                }
                                <a class="nav-link dropdown-toggle" href="#" id="adminNotificationsDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="fas fa-bell me-1"></i>Thông Báo
                                    @if (adminUnreadCount > 0)
                                    {
                                        <span class="notification-badge">@adminUnreadCount</span>
                                    }
                                </a>
                                <ul class="dropdown-menu notification-dropdown" id="admin-notifications" aria-labelledby="adminNotificationsDropdown">
                                    @if (adminUnreadCount > 0 && adminNotifications != null)
                                    {
                                        foreach (var notification in adminNotifications)
                                        {
                                            if (notification != null)
                                            {
                                                <li class="notification-item">
                                                    <a href="@Url.Action("Index", "Notifications", new { notificationId = notification.Id })" class="text-decoration-none text-dark">
                                                        <strong>@(notification.CreatedAt != null ? notification.CreatedAt.ToString("dd/MM/yyyy HH:mm") : "N/A")</strong>
                                                        <p>@(notification.Message ?? "Không có nội dung")</p>
                                                    </a>
                                                </li>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        <li class="dropdown-item text-center">Không có thông báo mới</li>
                                    }
                                </ul>
                            </li>

                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" id="adminManageDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="fas fa-cogs me-1"></i>Quản Lý
                                </a>
                                <ul class="dropdown-menu" aria-labelledby="adminManageDropdown">
                                    <li>
                                        <a class="dropdown-item" asp-controller="Admin" asp-action="ManageUsers">
                                            <i class="fas fa-users me-2"></i>Quản lý người dùng
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" asp-controller="Admin" asp-action="ManageComplaints">
                                            <i class="fas fa-exclamation-circle me-2"></i>Quản Lý Khiếu Nại
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" asp-controller="Admin" asp-action="TransactionStats">
                                            <i class="fas fa-chart-line me-2"></i>Thống Kê Giao Dịch
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" asp-controller="Admin" asp-action="ManagePayments">
                                            <i class="fas fa-money-bill-wave me-2"></i>Quản Lý Giao Dịch
                                        </a>
                                    </li>
                                    <li class="dropdown-divider"></li>
                                    <li>
                                        <a class="dropdown-item" asp-controller="Admin" asp-action="BalanceHistory">
                                            @{
                                                var userId = Context.Session.GetString("UserId");
                                                var admin = DbContext?.Users.FirstOrDefault(u => u.Id == userId && u.Role == "Admin");
                                                if (admin != null)
                                                {
                                                    <div class="d-flex justify-content-between align-items-center">
                                                        <span><i class="fas fa-wallet me-2"></i>Số dư:</span>
                                                        <span class="badge bg-success">@admin.Balance.ToString("N0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN")) VNĐ</span>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <span class="text-danger">Lỗi: Không thể tải số dư.</span>
                                                }
                                            }
                                        </a>
                                    </li>
                                </ul>
                            </li>
                        }
                        @if (Context.Session != null && Context.Session.GetString("UserRole") == "Senior")
                        {
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" id="seniorManageDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    Quản Lý
                                </a>
                                <ul class="dropdown-menu" aria-labelledby="seniorManageDropdown">
                                    <li><a class="dropdown-item" asp-controller="Caregivers" asp-action="ListCaregivers">Tìm kiếm Người chăm sóc</a></li>
                                    <li><a class="dropdown-item" asp-controller="CareJobs" asp-action="Index">Lịch chăm sóc & Yêu cầu chăm sóc</a></li>
                                </ul>
                            </li>
                            <li class="nav-item position-relative">
                                @{
                                    var seniorUserId = Context.Session.GetString("UserId");
                                    var seniorUnreadCount = 0;
                                    var seniorNotifications = new List<Chamsoc.Models.Notification>();
                                    if (!string.IsNullOrEmpty(seniorUserId) && DbContext != null)
                                    {
                                        try
                                        {
                                            seniorUnreadCount = DbContext.Notifications
                                            .Where(n => n.UserId == seniorUserId && !n.IsRead && !n.Message.Contains("Khiếu nại"))
                                            .Count();
                                            if (seniorUnreadCount > 0)
                                            {
                                                seniorNotifications = DbContext.Notifications
                                                .Where(n => n.UserId == seniorUserId && !n.IsRead && !n.Message.Contains("Khiếu nại"))
                                                .OrderByDescending(n => n.CreatedAt)
                                                .ToList();
                                            }
                                        }
                                        catch (Exception ex)
                                        {
                                        <li class="nav-item">
                                            <a class="nav-link text-danger">Lỗi khi tải thông báo: @ex.Message</a>
                                        </li>
                                        }
                                    }
                                    else
                                    {
                                        if (string.IsNullOrEmpty(seniorUserId))
                                        {
                                        <li class="nav-item">
                                            <a class="nav-link text-danger">Lỗi: UserId không được thiết lập trong session.</a>
                                        </li>
                                        }
                                        if (DbContext == null)
                                        {
                                        <li class="nav-item">
                                            <a class="nav-link text-danger">Lỗi: DbContext là null.</a>
                                        </li>
                                        }
                                    }
                                }
                            <a class="nav-link dropdown-toggle" href="#" id="seniorNotificationsDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Thông Báo
                                    @if (seniorUnreadCount > 0)
                                    {
                                    <span class="notification-badge">@seniorUnreadCount</span>
                                    }
                            </a>
                            <ul class="dropdown-menu notification-dropdown" aria-labelledby="seniorNotificationsDropdown">
                                    @if (seniorUnreadCount > 0 && seniorNotifications != null)
                                    {
                                        foreach (var notification in seniorNotifications)
                                        {
                                            if (notification != null)
                                            {
                                            <li class="notification-item">
                                                <a href="@Url.Action("Index", "Notifications", new { notificationId = notification.Id })" class="text-decoration-none text-dark">
                                                    <strong>@(notification.CreatedAt != null ? notification.CreatedAt.ToString("dd/MM/yyyy HH:mm") : "N/A")</strong>
                                                    <p>@(notification.Message ?? "Không có nội dung")</p>
                                                </a>
                                            </li>
                                            }
                                        }
                                    }
                                    else
                                    {
                                    <li class="dropdown-item text-center">Không có thông báo mới</li>
                                    }
                            </ul>
                            </li>
                            <li class="nav-item position-relative">
                                @{
                                    var seniorComplaintCount = 0;
                                    var seniorComplaints = new List<Chamsoc.Models.Notification>();
                                    if (!string.IsNullOrEmpty(seniorUserId) && DbContext != null)
                                    {
                                        try
                                        {
                                            seniorComplaintCount = DbContext.Notifications
                                            .Where(n => n.UserId == seniorUserId && !n.IsRead && n.Message.Contains("Khiếu nại"))
                                            .Count();
                                            if (seniorComplaintCount > 0)
                                            {
                                                seniorComplaints = DbContext.Notifications
                                                .Where(n => n.UserId == seniorUserId && !n.IsRead && n.Message.Contains("Khiếu nại"))
                                                .OrderByDescending(n => n.CreatedAt)
                                                .ToList();
                                            }
                                        }
                                        catch (Exception ex)
                                        {
                                        <li class="nav-item">
                                            <a class="nav-link text-danger">Lỗi khi tải thông báo khiếu nại: @ex.Message</a>
                                        </li>
                                        }
                                    }
                                    else
                                    {
                                        if (string.IsNullOrEmpty(seniorUserId))
                                        {
                                        <li class="nav-item">
                                            <a class="nav-link text-danger">Lỗi: UserId không được thiết lập trong session.</a>
                                        </li>
                                        }
                                        if (DbContext == null)
                                        {
                                        <li class="nav-item">
                                            <a class="nav-link text-danger">Lỗi: DbContext là null.</a>
                                        </li>
                                        }
                                    }
                                }
                            <a class="nav-link dropdown-toggle" href="#" id="seniorComplaintsDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Khiếu Nại
                                    @if (seniorComplaintCount > 0)
                                    {
                                    <span class="notification-badge">@seniorComplaintCount</span>
                                    }
                            </a>
                            <ul class="dropdown-menu notification-dropdown" aria-labelledby="seniorComplaintsDropdown">
                                    @if (seniorComplaintCount > 0 && seniorComplaints != null)
                                    {
                                        foreach (var notification in seniorComplaints)
                                        {
                                            if (notification != null)
                                            {
                                            <li class="notification-item">
                                                <strong>@(notification.CreatedAt != null ? notification.CreatedAt.ToString("dd/MM/yyyy HH:mm") : "N/A")</strong>
                                                <p>@(notification.Message ?? "Không có nội dung")</p>
                                            </li>
                                            }
                                        }
                                    }
                                    else
                                    {
                                    <li class="dropdown-item text-center">Không có thông báo khiếu nại mới</li>
                                    }
                            </ul>
                            </li>
                        }
                        @if (Context.Session != null && Context.Session.GetString("UserRole") == "Caregiver")
                        {
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Seniors" asp-action="ListSeniors">Tìm kiếm Người cần chăm sóc</a>
                            </li>
                            <li class="nav-item position-relative">
                                @{
                                    var caregiverUserId = Context.Session.GetString("UserId");
                                    var caregiverUnreadCount = 0;
                                    var caregiverNotifications = new List<Chamsoc.Models.Notification>();
                                    if (!string.IsNullOrEmpty(caregiverUserId) && DbContext != null)
                                    {
                                        try
                                        {
                                            caregiverUnreadCount = DbContext.Notifications
                                            .Where(n => n.UserId == caregiverUserId && !n.IsRead)
                                            .Count();
                                            if (caregiverUnreadCount > 0)
                                            {
                                                caregiverNotifications = DbContext.Notifications
                                                .Where(n => n.UserId == caregiverUserId && !n.IsRead)
                                                .OrderByDescending(n => n.CreatedAt)
                                                .ToList();
                                            }
                                        }
                                        catch (Exception ex)
                                        {
                                        <li class="nav-item">
                                            <a class="nav-link text-danger">Lỗi khi tải thông báo: @ex.Message</a>
                                        </li>
                                        }
                                    }
                                    else
                                    {
                                        if (string.IsNullOrEmpty(caregiverUserId))
                                        {
                                        <li class="nav-item">
                                            <a class="nav-link text-danger">Lỗi: UserId không được thiết lập trong session.</a>
                                        </li>
                                        }
                                        if (DbContext == null)
                                        {
                                        <li class="nav-item">
                                            <a class="nav-link text-danger">Lỗi: DbContext là null.</a>
                                        </li>
                                        }
                                    }
                                }
                            <a class="nav-link dropdown-toggle" href="#" id="caregiverNotificationsDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Thông Báo
                                    @if (caregiverUnreadCount > 0)
                                    {
                                    <span class="notification-badge">@caregiverUnreadCount</span>
                                    }
                            </a>
                            <ul class="dropdown-menu notification-dropdown" aria-labelledby="caregiverNotificationsDropdown">
                                    @if (caregiverUnreadCount > 0 && caregiverNotifications != null)
                                    {
                                        foreach (var notification in caregiverNotifications)
                                        {
                                            if (notification != null)
                                            {
                                            <li class="notification-item">
                                                <a href="@Url.Action("Index", "Notifications", new { notificationId = notification.Id })" class="text-decoration-none text-dark">
                                                    <strong>@(notification.CreatedAt != null ? notification.CreatedAt.ToString("dd/MM/yyyy HH:mm") : "N/A")</strong>
                                                    <p>@(notification.Message ?? "Không có nội dung")</p>
                                                </a>
                                            </li>
                                            }
                                        }
                                    }
                                    else
                                    {
                                    <li class="dropdown-item text-center">Không có thông báo mới</li>
                                    }
                            </ul>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="CareJobs" asp-action="Index">Quản lý chăm sóc bệnh nhân</a>
                            </li>
                        }
                    }
                </ul>
                <div class="d-flex align-items-center">
                    <span class="navbar-text me-3">
                        Hotline: <a href="tel:0522336052" style="color: #007bff; font-weight: bold;">0522.336.052</a>
                    </span>
                    @if (User.Identity.IsAuthenticated)
                    {
                        <span class="navbar-text me-3">
                            Xin chào, @User.Identity.Name (@(Context.Session != null ? Context.Session.GetString("UserRole") : "Session is null"))
                        </span>
                        <form asp-controller="Account" asp-action="Logout" method="post" class="d-inline">
                            <button type="submit" class="login-btn">Đăng xuất</button>
                        </form>
                    }
                    else
                    {
                        <a class="login-btn" asp-controller="Account" asp-action="Login">Đăng nhập</a>
                    }
                </div>
            </div>
        </div>
    </nav>

    <!-- Banner -->
    <div class="banner">
        <img src="https://giupviecgiaphu.com/upload/images/dich-vu-cham-soc-nguoi-benh-tai-nha-benh-vien-GIA-PHU.jpg" alt="Banner" />
        <div class="banner-text">
            <h1>Dịch Vụ Chăm Sóc Sức Khỏe Toàn Diện Và Vật Lý Trị Liệu 24/7</h1>
            <p>Sứ mệnh của chúng tôi: "Cuộc sống tốt hơn cho bạn và mọi người"</p>
        </div>
    </div>

    <!-- Main Content -->
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <!-- Hotline Bar -->
    <div class="hotline-bar">
        <span>Hotline: </span>
        <a href="tel:0522336052">0522.336.052</a> -
    </div>

    <!-- Bong bóng chat Zalo -->
    <div class="zalo-chat-btn" id="zaloChatBtn">
        <img src="https://nhanvanauto.vn/wp-content/uploads/2024/01/a9025424-6f3f-4804-8a0e-d9f5ae2b80ff-cover.png" alt="Zalo" style="width: 45px; height: 45px;">
    </div>

    <!-- Footer -->
    <footer class="footer">
        <div class="container">
            <div class="row">
                <div class="col-md-3">
                    <h5>GKM Care</h5>
                    <p>Được thành lập với sứ mệnh kết nối người cần chăm sóc với những người chăm sóc tận tâm.</p>
                    <p>Ngày thành lập: 01/01/2023</p>
                </div>
                <div class="col-md-3">
                    <h5>Công Ty TNHH GKMN</h5>
                </div>
                <div class="col-md-3">
                    <h5>Thời gian hoạt động</h5>
                    <p>Thứ 2 - Chủ Nhật: 7h30 - 18h00</p>
                </div>
                <div class="col-md-3">
                    <h5>Thông tin liên hệ</h5>
                    <p>Email: <a href="mailto:info@gkmcare.com">info@gkmcare.com</a></p>
                    <p>Hotline: <a href="tel:0522336052">0522.336.052</a></p>
                </div>
            </div>
            <hr style="border-color: #ffffff50;" />
            <div class="text-center">
                <p>© 2023 - GKM Care. All rights reserved.</p>
            </div>
        </div>
    </footer>

    <!-- Toast Notification -->
    <div class="toast-container position-fixed bottom-0 end-0 p-3">
        <div id="toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <strong class="me-auto" id="toastTitle">Thông báo</strong>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body" id="toastMessage">
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.32/dist/sweetalert2.all.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script>
        var tempData = {
            successMessage: '@TempData["SuccessMessage"]',
            errorMessage: '@TempData["ErrorMessage"]',
            infoMessage: '@TempData["InfoMessage"]',
            warningMessage: '@TempData["WarningMessage"]'
        };
    </script>
    <script src="~/js/site.js"></script>
    @RenderSection("Scripts", required: false)
</body>
</html>