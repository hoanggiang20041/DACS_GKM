@model List<Chamsoc.Models.CaregiverViewModel>
@using System.Globalization

@{
    ViewData["Title"] = "Danh sách người chăm sóc";
    var currentUserId = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value ?? "anonymous";
    var currentUserName = User.Identity.Name ?? "Người dùng không xác định";
}

<div class="container-fluid py-4">
    <!-- Best Sellers Section -->
    <div class="best-sellers-section mb-5">
        <div class="section-header text-center mb-4">
            <h3 class="text-primary">
                <i class="fas fa-crown text-warning me-2"></i>Top Người Chăm Sóc Nổi Bật
            </h3>
            <p class="text-muted">Những người chăm sóc được đánh giá cao nhất từ cộng đồng</p>
        </div>
        
        <div id="bestSellersCarousel" class="carousel slide" data-bs-ride="carousel">
            <div class="carousel-inner">
                @{
                    var bestSellers = Model
                        .OrderByDescending(c => c.RatingCount)
                        .Take(3)
                        .ToList();
                    
                    for (int i = 0; i < bestSellers.Count; i++)
                    {
                        var caregiver = bestSellers[i];
                        <div class="carousel-item @(i == 0 ? "active" : "")">
                            <div class="row justify-content-center">
                                <div class="col-lg-8">
                                    <div class="best-seller-card">
                                        <div class="row g-0">
                                            <div class="col-md-4">
                                                <div class="image-container">
                                                    <img src="@(string.IsNullOrEmpty(caregiver.AvatarUrl) ? "/images/default-avatar.png" : caregiver.AvatarUrl)" 
                                                         class="img-fluid" alt="@caregiver.Name">
                                                    <div class="rank-badge">
                                                        <i class="fas fa-medal"></i>
                                                        <span>#@(i + 1)</span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-8">
                                                <div class="content-container">
                                                    <div class="d-flex justify-content-between align-items-start mb-3">
                                                        <div>
                                                            <h4 class="mb-1">@caregiver.Name</h4>
                                                            <div class="rating-stars mb-2">
                                                                @for (int j = 1; j <= 5; j++)
                                                                {
                                                                    if (j <= caregiver.AverageRating)
                                                                    {
                                                                        <i class="fas fa-star"></i>
                                                                    }
                                                                    else if (j - 0.5 <= caregiver.AverageRating)
                                                                    {
                                                                        <i class="fas fa-star-half-alt"></i>
                                                                    }
                                                                    else
                                                                    {
                                                                        <i class="far fa-star"></i>
                                                                    }
                                                                }
                                                                <span class="rating-count">(@caregiver.RatingCount đánh giá)</span>
                                                            </div>
                                                        </div>
                                                        <div class="price-tag">
                                                            @caregiver.Price.ToString("N0") VNĐ/ngày
                                                        </div>
                                                    </div>
                                                    
                                                    <div class="skills-container mb-3">
                                                        <h6 class="text-primary mb-2">Chuyên môn:</h6>
                                                        @foreach (var skill in caregiver.Skills.Split(','))
                                                        {
                                                            <span class="skill-badge">@skill.Trim()</span>
                                                        }
                                                    </div>
                                                    
                                                    <div class="stats-container mb-3">
                                                        <div class="stat-item">
                                                            <i class="fas fa-user-check"></i>
                                                            <span>@caregiver.RatingCount khách hàng</span>
                                                        </div>
                                                        <div class="stat-item">
                                                            <i class="fas fa-clock"></i>
                                                            <span>@(caregiver.IsAvailable ? "Sẵn sàng" : "Đang bận")</span>
                                                        </div>
                                                    </div>
                                                    
                                                    <div class="action-buttons">
                                                        <a href="@Url.Action("ViewUserProfile", "Account", new { id = caregiver.UserId })" 
                                                           class="btn btn-primary">
                                                            <i class="fas fa-user me-2"></i>Xem hồ sơ
                                                        </a>
                                                        @if (User.Identity.IsAuthenticated && User.IsInRole("Senior"))
                                                        {
                                                            <a href="@Url.Action("BookCaregiver", "CareJobs", new { id = caregiver.Id })" 
                                                               class="btn btn-success"
                                                               onclick="return checkAvailability(@caregiver.Id, @caregiver.IsAvailable.ToString().ToLower());">
                                                                <i class="fas fa-calendar-plus me-2"></i>Đặt lịch
                                                            </a>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
            
            <button class="carousel-control-prev" type="button" data-bs-target="#bestSellersCarousel" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#bestSellersCarousel" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
    </div>

    <div class="row justify-content-center">
        <div class="col-lg-10">
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i>@TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <div class="card shadow-sm border-0 mb-4">
                <div class="card-header bg-primary text-white py-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">
                            <i class="fas fa-users me-2"></i>Danh sách người chăm sóc
                        </h5>
                        <div class="d-flex gap-2">
                            <button class="btn btn-light" type="button" data-bs-toggle="collapse" data-bs-target="#searchCollapse">
                                <i class="fas fa-search me-2"></i>Tìm kiếm
                            </button>
                        </div>
                    </div>
                </div>

                <div class="collapse" id="searchCollapse">
                    <div class="card-body border-bottom">
                        <form method="get" class="row g-3">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label class="form-label">Tên người chăm sóc</label>
                                    <input type="text" name="searchName" class="form-control" value="@ViewBag.SearchName" placeholder="Nhập tên..." />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label class="form-label">Kỹ năng</label>
                                    <input type="text" name="searchSkills" class="form-control" value="@ViewBag.SearchSkills" placeholder="Nhập kỹ năng..." />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label class="form-label">Đánh giá tối thiểu</label>
                                    <select name="minRating" class="form-select">
                                        <option value="">Tất cả</option>
                                        <option value="4" selected="@(ViewBag.MinRating == 4 ? "selected" : null)">4+ sao</option>
                                        <option value="3" selected="@(ViewBag.MinRating == 3 ? "selected" : null)">3+ sao</option>
                                        <option value="2" selected="@(ViewBag.MinRating == 2 ? "selected" : null)">2+ sao</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-12">
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-search me-2"></i>Tìm kiếm
                                </button>
                                <a href="@Url.Action("ListCaregivers")" class="btn btn-secondary">
                                    <i class="fas fa-redo me-2"></i>Đặt lại
                                </a>
                            </div>
                        </form>
                    </div>
                </div>

                <div class="card-body">
                    <div class="row g-4">
                        @foreach (var caregiver in Model)
                        {
                            <div class="col-md-6 col-lg-4">
                                <div class="card h-100 shadow-sm">
                                    @if (caregiver.IsVerified)
                                    {
                                        <div class="verified-badge">
                                            <i class="fas fa-check-circle me-1"></i>Đã xác minh
                                        </div>
                                    }
                                    <div class="status-badge @(caregiver.IsAvailable ? "bg-success" : "bg-warning")">
                                        @(caregiver.IsAvailable ? "Sẵn sàng" : "Đang bận")
                                    </div>
                                    <img src="@(string.IsNullOrEmpty(caregiver.AvatarUrl) ? "/images/default-avatar.png" : caregiver.AvatarUrl)" 
                                         class="card-img-top" alt="@caregiver.Name">
                                    <div class="card-body">
                                        <h5 class="card-title mb-3">@caregiver.Name</h5>
                                        <div class="mb-3">
                                            <div class="rating-stars">
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    if (i <= caregiver.AverageRating)
                                                    {
                                                        <i class="fas fa-star"></i>
                                                    }
                                                    else if (i - 0.5 <= caregiver.AverageRating)
                                                    {
                                                        <i class="fas fa-star-half-alt"></i>
                                                    }
                                                    else
                                                    {
                                                        <i class="far fa-star"></i>
                                                    }
                                                }
                                                <span class="rating-count">(@caregiver.RatingCount đánh giá)</span>
                                            </div>
                                        </div>
                                        <div class="mb-3">
                                            <p class="text-muted mb-2">
                                                <i class="fas fa-certificate me-2"></i>Chứng chỉ: 
                                                @if (!string.IsNullOrEmpty(caregiver.CertificateFilePath))
                                                {
                                                    <a href="@caregiver.CertificateFilePath" target="_blank">Xem</a>
                                                }
                                                else
                                                {
                                                    <span>Chưa có</span>
                                                }
                                            </p>
                                        </div>
                                        <div class="mb-3">
                                            <h6 class="text-primary mb-2">Kỹ năng:</h6>
                                            @foreach (var skill in caregiver.Skills.Split(','))
                                            {
                                                <span class="skills-badge">@skill.Trim()</span>
                                            }
                                        </div>
                                        <div class="price-tag">
                                            <i class="fas fa-tag me-2"></i>@caregiver.Price.ToString("N0") VNĐ/giờ
                                        </div>
                                        <div class="d-flex gap-2 mt-3">
                                            <a href="@Url.Action("ViewUserProfile", "Account", new { id = caregiver.UserId })" 
                                               class="btn btn-outline-primary flex-grow-1">
                                                <i class="fas fa-user me-2"></i>Xem hồ sơ
                                            </a>
                                            @if (User.Identity.IsAuthenticated && User.IsInRole("Senior"))
                                            {
                                                <a href="@Url.Action("BookCaregiver", "CareJobs", new { id = caregiver.Id })" 
                                                   class="btn btn-primary flex-grow-1 @(!caregiver.IsAvailable ? "disabled" : "")"
                                                   disabled="@(!caregiver.IsAvailable)">
                                                    <i class="fas fa-calendar-plus me-2"></i>Đặt lịch
                                                </a>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .card {
        border-radius: 1rem;
        overflow: hidden;
    }
    .card-header {
        border-bottom: none;
    }
    .info-section {
        background: #f8f9fa;
        padding: 1.5rem;
        border-radius: 0.5rem;
    }
    .badge {
        padding: 0.5rem 1rem;
        font-weight: 500;
    }
    .btn {
        padding: 0.5rem 1.5rem;
        border-radius: 0.5rem;
        font-weight: 500;
    }
    .alert {
        border-radius: 0.5rem;
        border: none;
    }
    .card-img-top {
        height: 250px;
        object-fit: cover;
    }
    .rating-stars {
        color: #ffc107;
        font-size: 1.2rem;
    }
    .rating-count {
        color: #6c757d;
        font-size: 0.9rem;
    }
    .skills-badge {
        background-color: #e9ecef;
        color: #495057;
        padding: 0.5rem 1rem;
        border-radius: 20px;
        margin: 0.25rem;
        display: inline-block;
        font-size: 0.9rem;
        transition: all 0.3s ease;
    }
    .skills-badge:hover {
        background-color: #007bff;
        color: white;
    }
    .price-tag {
        background: linear-gradient(45deg, #28a745, #20c997);
        color: white;
        padding: 0.75rem 1.5rem;
        border-radius: 25px;
        font-weight: bold;
        box-shadow: 0 2px 4px rgba(40, 167, 69, 0.2);
        display: inline-block;
        margin: 1rem 0;
    }
    .status-badge {
        position: absolute;
        top: 1rem;
        right: 1rem;
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-weight: bold;
        color: white;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        z-index: 1;
    }
    .verified-badge {
        position: absolute;
        top: 1rem;
        left: 1rem;
        background: linear-gradient(45deg, #17a2b8, #20c997);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-weight: bold;
        box-shadow: 0 2px 4px rgba(23, 162, 184, 0.2);
        z-index: 1;
    }
    .form-control, .form-select {
        border-radius: 0.5rem;
        padding: 0.5rem 1rem;
    }
    .form-control:focus, .form-select:focus {
        box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
    }
    .hover-card {
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    }
    .hover-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;
    }
    .badge {
        font-size: 0.8rem;
        padding: 0.5em 0.8em;
    }
    .card-img-top {
        border-top-left-radius: 0.375rem;
        border-top-right-radius: 0.375rem;
    }
    .card-footer {
        padding: 1rem;
    }
    .btn-primary {
        transition: all 0.2s ease-in-out;
    }
    .btn-primary:hover {
        transform: translateY(-1px);
        box-shadow: 0 0.25rem 0.5rem rgba(13, 110, 253, 0.25);
    }

    /* Carousel styles */
    .carousel {
        padding: 0 40px;
    }

    .carousel-control-prev,
    .carousel-control-next {
        width: 40px;
        height: 40px;
        background: rgba(0, 0, 0, 0.5);
        border-radius: 50%;
        top: 50%;
        transform: translateY(-50%);
        opacity: 0;
        transition: all 0.3s ease;
    }

    .carousel:hover .carousel-control-prev,
    .carousel:hover .carousel-control-next {
        opacity: 1;
    }

    .carousel-control-prev {
        left: 0;
    }

    .carousel-control-next {
        right: 0;
    }

    .carousel-indicators {
        margin-bottom: 0;
    }

    .carousel-indicators button {
        width: 10px;
        height: 10px;
        border-radius: 50%;
        margin: 0 5px;
        background-color: #dee2e6;
        border: none;
    }

    .carousel-indicators button.active {
        background-color: #0d6efd;
    }

    .carousel-item {
        transition: transform 0.6s ease-in-out;
    }

    .carousel-item.active {
        display: block;
    }

    /* Animation for cards in carousel */
    .carousel-item .card {
        opacity: 0;
        transform: translateY(20px);
        transition: all 0.5s ease;
    }

    .carousel-item.active .card {
        opacity: 1;
        transform: translateY(0);
    }

    .carousel-item .card:nth-child(1) { transition-delay: 0.1s; }
    .carousel-item .card:nth-child(2) { transition-delay: 0.2s; }
    .carousel-item .card:nth-child(3) { transition-delay: 0.3s; }
    .carousel-item .card:nth-child(4) { transition-delay: 0.4s; }

    /* Best Sellers Section Styles */
    .best-sellers-section {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        padding: 2rem;
        border-radius: 1rem;
    }

    .section-header {
        margin-bottom: 2rem;
    }

    .section-header p {
        font-size: 1.1rem;
        max-width: 600px;
        margin: 0 auto;
    }

    .best-seller-card {
        background: white;
        border-radius: 1rem;
        overflow: hidden;
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

    .best-seller-card:hover {
        transform: translateY(-5px);
    }

    .image-container {
        position: relative;
        height: 100%;
        min-height: 300px;
    }

    .image-container img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .rank-badge {
        position: absolute;
        top: 1rem;
        left: 1rem;
        background: linear-gradient(45deg, #ffd700, #ffa500);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 2rem;
        font-weight: bold;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    }

    .content-container {
        padding: 2rem;
        height: 100%;
        display: flex;
        flex-direction: column;
    }

    .price-tag {
        background: linear-gradient(45deg, #28a745, #20c997);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 2rem;
        font-weight: bold;
        font-size: 1.1rem;
    }

    .skills-container {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
    }

    .skill-badge {
        background: #e9ecef;
        color: #495057;
        padding: 0.5rem 1rem;
        border-radius: 2rem;
        font-size: 0.9rem;
        transition: all 0.3s ease;
    }

    .skill-badge:hover {
        background: #0d6efd;
        color: white;
    }

    .stats-container {
        display: flex;
        gap: 2rem;
    }

    .stat-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: #6c757d;
    }

    .stat-item i {
        color: #0d6efd;
    }

    .action-buttons {
        display: flex;
        gap: 1rem;
        margin-top: auto;
    }

    .action-buttons .btn {
        flex: 1;
        padding: 0.75rem 1.5rem;
        border-radius: 2rem;
        font-weight: 500;
        transition: all 0.3s ease;
    }

    .action-buttons .btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .carousel {
        padding: 0 40px;
    }

    .carousel-control-prev,
    .carousel-control-next {
        width: 40px;
        height: 40px;
        background: rgba(0, 0, 0, 0.5);
        border-radius: 50%;
        top: 50%;
        transform: translateY(-50%);
        opacity: 0;
        transition: all 0.3s ease;
    }

    .carousel:hover .carousel-control-prev,
    .carousel:hover .carousel-control-next {
        opacity: 1;
    }

    .carousel-control-prev {
        left: 0;
    }

    .carousel-control-next {
        right: 0;
    }

    .carousel-item {
        transition: transform 0.6s ease-in-out;
    }

    .carousel-item.active {
        display: block;
    }

    /* Animation for best seller card */
    .carousel-item .best-seller-card {
        opacity: 0;
        transform: translateY(20px);
        transition: all 0.5s ease;
    }

    .carousel-item.active .best-seller-card {
        opacity: 1;
        transform: translateY(0);
    }
</style>

@section Scripts {
    <script>
        // Initialize carousel with custom settings
        document.addEventListener('DOMContentLoaded', function() {
            var carousel = new bootstrap.Carousel(document.getElementById('bestSellersCarousel'), {
                interval: 5000,  // Change slide every 5 seconds
                wrap: true,      // Continuous loop
                keyboard: true,  // Keyboard navigation
                pause: 'hover'   // Pause on mouse hover
            });
        });

        function checkAvailability(caregiverId, isAvailable) {
            if (!isAvailable) {
                alert('Người chăm sóc này hiện đang bận. Vui lòng chọn người khác hoặc thử lại sau.');
                return false;
            }
            return true;
        }
    </script>
}